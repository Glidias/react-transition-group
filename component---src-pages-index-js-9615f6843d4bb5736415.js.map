{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["propTypes","location","PropTypes","object","isRequired","data","shape","site","siteMetadata","componentPages","arrayOf","path","string","displayName","Index","render","this","props","href","className","trim","map","key","to","React","Component"],"mappings":"qNAMMA,EAAY,CAChBC,SAAUC,IAAUC,OAAOC,WAC3BC,KAAMH,IAAUI,MAAM,CACpBC,KAAML,IAAUI,MAAM,CACpBE,aAAcN,IAAUI,MAAM,CAC5BG,eAAgBP,IAAUQ,QACxBR,IAAUI,MAAM,CACdK,KAAMT,IAAUU,OAAOR,WACvBS,YAAaX,IAAUU,OAAOR,cAEhCA,aACDA,aACFA,aACFA,YAGCU,E,0FACJC,OAAA,WAAU,IAAD,EACoBC,KAAKC,MAAxBZ,EADD,EACCA,KAAMJ,EADP,EACOA,SAEd,OACE,kBAAC,IAAD,CAAQI,KAAMA,EAAMJ,SAAUA,GAC5B,kBAAC,IAAD,KACE,sDACA,oCACE,qKAGO,IACL,uBAAGiB,KAAK,4CAAR,gBAJF,iOAaF,iCACE,+CACA,4BACA,wBAAIC,UAAU,MAAd,gBACA,yBAAKA,UAAU,iBACb,8BACG,gHAMDC,SAIJ,wBAAID,UAAU,MAAd,kBACA,4QAIgD,IAC9C,uBAAGD,KAAK,2EAAR,6EAKJ,0CACA,4BACGb,EAAKE,KAAKC,aAAaC,eAAeY,KACrC,gBAAGV,EAAH,EAAGA,KAAME,EAAT,EAASA,YAAT,OACE,wBAAIS,IAAKX,GACP,kBAAC,IAAD,CAAMY,GAAIZ,GAAOE,W,GAtDfW,IAAMC,WAiE1BX,EAAMd,UAAYA,EAEHc","file":"component---src-pages-index-js-9615f6843d4bb5736415.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Layout from '../components/Layout';\n\nconst propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        componentPages: PropTypes.arrayOf(\n          PropTypes.shape({\n            path: PropTypes.string.isRequired,\n            displayName: PropTypes.string.isRequired,\n          })\n        ).isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nclass Index extends React.Component {\n  render() {\n    const { data, location } = this.props;\n\n    return (\n      <Layout data={data} location={location}>\n        <Container>\n          <h1>React Transition Group</h1>\n          <blockquote>\n            <p>\n              Exposes simple components useful for defining entering and exiting\n              transitions. React Transition Group is not an animation library\n              like{' '}\n              <a href=\"https://github.com/chenglou/react-motion\">\n                React-Motion\n              </a>\n              , it does not animate styles by itself. Instead it exposes\n              transition stages, manages classes and group elements and\n              manipulates the DOM in useful ways, making the implementation of\n              actual visual transitions much easier.\n            </p>\n          </blockquote>\n          <section>\n            <h2>Getting Started</h2>\n            <p />\n            <h3 className=\"h4\">Installation</h3>\n            <pre className=\"language-bash\">\n              <code>\n                {`\n# npm\nnpm install react-transition-group --save\n\n# yarn\nyarn add react-transition-group\n              `.trim()}\n              </code>\n            </pre>\n\n            <h3 className=\"h4\">CDN / External</h3>\n            <p>\n              Since react-transition-group is fairly small, the overhead of\n              including the library in your application is negligible. However,\n              in situations where it may be useful to benefit from an external\n              CDN when bundling, link to the following CDN:{' '}\n              <a href=\"https://unpkg.com/react-transition-group/dist/react-transition-group.js\">\n                https://unpkg.com/react-transition-group/dist/react-transition-group.js\n              </a>\n            </p>\n          </section>\n          <h2>Components</h2>\n          <ul>\n            {data.site.siteMetadata.componentPages.map(\n              ({ path, displayName }) => (\n                <li key={path}>\n                  <Link to={path}>{displayName}</Link>\n                </li>\n              )\n            )}\n          </ul>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nIndex.propTypes = propTypes;\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    site {\n      ...Layout_site\n    }\n  }\n`;\n"],"sourceRoot":""}