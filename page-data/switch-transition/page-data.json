{"componentChunkName":"component---src-templates-component-js","path":"/switch-transition","result":{"data":{"site":{"siteMetadata":{"componentPages":[{"path":"/transition","displayName":"Transition","codeSandboxId":null},{"path":"/css-transition","displayName":"CSSTransition","codeSandboxId":"m77l2vp00x"},{"path":"/switch-transition","displayName":"SwitchTransition","codeSandboxId":"switchtransition-component-iqm0d"},{"path":"/transition-group","displayName":"TransitionGroup","codeSandboxId":"00rqyo26kn"}]}},"metadata":{"displayName":"SwitchTransition","composes":null,"description":{"childMarkdownRemark":{"html":"<p>A transition component inspired by the <a href=\"https://vuejs.org/v2/guide/transitions.html#Transition-Modes\">vue transition modes</a>.\nYou can use it when you want to control the render between state transitions.\nBased on the selected mode and the child's key which is the <code class=\"language-text\">Transition</code> or <code class=\"language-text\">CSSTransition</code> component, the <code class=\"language-text\">SwitchTransition</code> makes a consistent transition between them.</p>\n<p>If the <code class=\"language-text\">out-in</code> mode is selected, the <code class=\"language-text\">SwitchTransition</code> waits until the old child leaves and then inserts a new child.\nIf the <code class=\"language-text\">in-out</code> mode is selected, the <code class=\"language-text\">SwitchTransition</code> inserts a new child first, waits for the new child to enter and then removes the old child.</p>\n<p><strong>Note</strong>: If you want the animation to happen simultaneously\n(that is, to have the old child removed and a new child inserted <strong>at the same time</strong>),\nyou should use\n<a href=\"https://reactcommunity.org/react-transition-group/transition-group\"><code class=\"language-text\">TransitionGroup</code></a>\ninstead.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SwitchTransition</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n     </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CSSTransition</span></span>\n       <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>state <span class=\"token operator\">?</span> <span class=\"token string\">\"Goodbye, world!\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">}</span></span>\n       <span class=\"token attr-name\">addEndListener</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node<span class=\"token punctuation\">,</span> done</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> node<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transitionend\"</span><span class=\"token punctuation\">,</span> done<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n       <span class=\"token attr-name\">classNames</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>fade<span class=\"token punctuation\">'</span></span>\n     <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n       </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n         </span><span class=\"token punctuation\">{</span>state <span class=\"token operator\">?</span> <span class=\"token string\">\"Goodbye, world!\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n       </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n     </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">CSSTransition</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n   </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SwitchTransition</span></span><span class=\"token punctuation\">></span></span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.fade-enter</span><span class=\"token punctuation\">{</span>\n   <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.fade-exit</span><span class=\"token punctuation\">{</span>\n   <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.fade-enter-active</span><span class=\"token punctuation\">{</span>\n   <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.fade-exit-active</span><span class=\"token punctuation\">{</span>\n   <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.fade-enter-active,\n.fade-exit-active</span><span class=\"token punctuation\">{</span>\n   <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> opacity 500ms<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}},"props":[{"name":"mode","required":false,"type":{"name":"'out-in'|'in-out'","value":[{"value":"'in-out'","computed":false},{"value":"'out-in'","computed":false}],"raw":null},"defaultValue":{"value":"'out-in'","computed":false},"description":{"childMarkdownRemark":{"html":"<p>Transition modes.\n<code class=\"language-text\">out-in</code>: Current element transitions out first, then when complete, the new element transitions in.\n<code class=\"language-text\">in-out</code>: New element transitions in first, then when complete, the current element transitions out.</p>"}},"doclets":[{"tag":"type","value":"{'out-in'|'in-out'}"}]},{"name":"children","required":false,"type":{"name":"union","value":[{"name":"element"}],"raw":null},"defaultValue":null,"description":{"childMarkdownRemark":{"html":"<p>Any <code class=\"language-text\">Transition</code> or <code class=\"language-text\">CSSTransition</code> component.</p>"}},"doclets":[]}]}},"pageContext":{"displayName":"SwitchTransition"}},"staticQueryHashes":[]}